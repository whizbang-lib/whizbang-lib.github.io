{
  "samples": [
    {
      "id": "angular-reactive-form",
      "title": "Angular Reactive Forms with Validation",
      "description": "A comprehensive example showing how to build reactive forms with custom validation in Angular.",
      "files": [
        {
          "filename": "user-form.component.ts",
          "content": "",
          "language": "typescript",
          "description": "Main component with reactive form implementation"
        },
        {
          "filename": "user-form.component.html",
          "content": "",
          "language": "html",
          "description": "Template with form controls and validation messages"
        },
        {
          "filename": "user-form.component.scss",
          "content": "",
          "language": "scss",
          "description": "Styling for the form component"
        }
      ],
      "githubRepo": "https://github.com/example/angular-reactive-forms",
      "stackblitzUrl": "https://stackblitz.com/edit/angular-reactive-forms-example",
      "demoUrl": "https://angular-reactive-forms-demo.netlify.app",
      "tags": ["forms", "validation", "reactive", "popular"],
      "difficulty": "intermediate",
      "framework": "Angular",
      "version": "17.0"
    },
    {
      "id": "primeng-data-table",
      "title": "Advanced PrimeNG DataTable",
      "description": "Feature-rich data table with sorting, filtering, pagination, and CRUD operations using PrimeNG.",
      "files": [
        {
          "filename": "data-table.component.ts",
          "content": "",
          "language": "typescript",
          "description": "Component with table logic and CRUD operations"
        },
        {
          "filename": "data-table.component.html",
          "content": "",
          "language": "html",
          "description": "Template with PrimeNG DataTable configuration"
        },
        {
          "filename": "data.service.ts",
          "content": "",
          "language": "typescript",
          "description": "Service for data management and API calls"
        }
      ],
      "githubRepo": "https://github.com/example/primeng-datatable",
      "stackblitzUrl": "https://stackblitz.com/edit/primeng-advanced-datatable",
      "codesandboxUrl": "https://codesandbox.io/s/primeng-datatable",
      "tags": ["primeng", "datatable", "crud", "filtering", "trending"],
      "difficulty": "advanced",
      "framework": "Angular",
      "version": "17.0"
    },
    {
      "id": "typescript-utility-types",
      "title": "TypeScript Utility Types Showcase",
      "description": "Comprehensive examples of TypeScript utility types and advanced type manipulation techniques.",
      "files": [
        {
          "filename": "utility-types.ts",
          "content": "",
          "language": "typescript",
          "description": "Examples of built-in utility types"
        },
        {
          "filename": "custom-types.ts",
          "content": "",
          "language": "typescript",
          "description": "Custom utility types and type helpers"
        },
        {
          "filename": "practical-examples.ts",
          "content": "",
          "language": "typescript",
          "description": "Real-world usage examples"
        }
      ],
      "githubRepo": "https://github.com/example/typescript-utilities",
      "stackblitzUrl": "https://stackblitz.com/edit/typescript-utility-types",
      "tags": ["typescript", "types", "utilities", "advanced"],
      "difficulty": "advanced",
      "framework": "TypeScript",
      "version": "5.0"
    },
    {
      "id": "rxjs-operators-guide",
      "title": "RxJS Operators Complete Guide",
      "description": "Learn the most important RxJS operators with practical examples and use cases.",
      "files": [
        {
          "filename": "basic-operators.ts",
          "content": "",
          "language": "typescript",
          "description": "Map, filter, and other basic operators"
        },
        {
          "filename": "advanced-operators.ts",
          "content": "",
          "language": "typescript",
          "description": "SwitchMap, mergeMap, and complex operators"
        },
        {
          "filename": "error-handling.ts",
          "content": "",
          "language": "typescript",
          "description": "Error handling patterns with RxJS"
        }
      ],
      "githubRepo": "https://github.com/example/rxjs-operators",
      "stackblitzUrl": "https://stackblitz.com/edit/rxjs-operators-guide",
      "demoUrl": "https://rxjs-operators-demo.netlify.app",
      "tags": ["rxjs", "observables", "operators", "reactive"],
      "difficulty": "intermediate",
      "framework": "RxJS",
      "version": "7.8"
    },
    {
      "id": "angular-state-management",
      "title": "Angular State Management with NgRx",
      "description": "Complete state management solution using NgRx with effects, selectors, and best practices.",
      "files": [
        {
          "filename": "app.state.ts",
          "content": "",
          "language": "typescript",
          "description": "Application state definition"
        },
        {
          "filename": "user.actions.ts",
          "content": "",
          "language": "typescript",
          "description": "NgRx actions for user management"
        },
        {
          "filename": "user.reducer.ts",
          "content": "",
          "language": "typescript",
          "description": "State reducer implementation"
        },
        {
          "filename": "user.effects.ts",
          "content": "",
          "language": "typescript",
          "description": "Side effects handling"
        }
      ],
      "githubRepo": "https://github.com/example/ngrx-state-management",
      "stackblitzUrl": "https://stackblitz.com/edit/angular-ngrx-example",
      "tags": ["ngrx", "state-management", "effects", "popular"],
      "difficulty": "advanced",
      "framework": "Angular",
      "version": "17.0"
    },
    {
      "id": "css-grid-layouts",
      "title": "Modern CSS Grid Layouts",
      "description": "Modern responsive layouts using CSS Grid with practical examples and best practices.",
      "files": [
        {
          "filename": "grid-basics.html",
          "content": "",
          "language": "html",
          "description": "Basic grid layout structure"
        },
        {
          "filename": "grid-layouts.css",
          "content": "",
          "language": "css",
          "description": "CSS Grid layout implementations"
        },
        {
          "filename": "responsive-grids.css",
          "content": "",
          "language": "css",
          "description": "Responsive grid patterns"
        }
      ],
      "githubRepo": "https://github.com/example/css-grid-layouts",
      "codesandboxUrl": "https://codesandbox.io/s/css-grid-layouts",
      "demoUrl": "https://css-grid-examples.netlify.app",
      "tags": ["css", "grid", "layout", "responsive", "beginner"],
      "difficulty": "beginner",
      "framework": "CSS",
      "version": "3.0"
    }
  ],
  "categories": [
    "Components",
    "Forms",
    "State Management",
    "Styling",
    "TypeScript",
    "RxJS"
  ],
  "frameworks": ["Angular", "TypeScript", "RxJS", "CSS"],
  "difficulties": ["beginner", "intermediate", "advanced"]
}
